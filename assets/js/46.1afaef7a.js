(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{603:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),a("ClientOnly",[a("ComponentDoc",{attrs:{component:"AwesomeTable"},scopedSlots:t._u([{key:"prop-col-description",fn:function(e){var s=e.prop;return["rows"==s.name?[t._v("\n  "+t._s(s.description||s.note)+"."),a("br"),t._v("\n  This is an array containing the list of columns definitions. This definition ca be a string representing the field to display or an object that allow more advance configuration. "),a("br"),t._v("\n  Example:"),a("br"),t._v(" "),a("code",[t._v("\n  {\n    label: 'joined On',\n    field: 'createdAt',\n    type: 'date',\n  }\n  ")]),t._v(" "),a("ul",[a("li",[t._v("- See "),a("a",{attrs:{href:"https://xaksis.github.io/vue-good-table/guide/configuration/column-options.html"}},[t._v("Vue good table documentation")]),t._v(" for more detail on row configuration.")]),t._v(" "),a("li",[t._v("- See "),a("a",{attrs:{href:"#columns-types"}},[t._v(" Column types")]),t._v(" for more info on suppoerted column types.")])])]:t._e()]}}])})],1),t._v(" "),a("h2",{attrs:{id:"columns-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#columns-types"}},[t._v("#")]),t._v(" columns types")]),t._v(" "),a("p",[t._v("The table can display various type of data. By default the value used it the string;")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("Basic string stype")])]),t._v(" "),a("tr",[a("td",[t._v("number")]),t._v(" "),a("td",[t._v("Number based field")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("Shows a green tick(✔) or a red cross(❌) depending on the value")])]),t._v(" "),a("tr",[a("td",[t._v("html")]),t._v(" "),a("td",[t._v("html")])]),t._v(" "),a("tr",[a("td",[t._v("url")]),t._v(" "),a("td",[t._v("In app or external url")])]),t._v(" "),a("tr",[a("td",[t._v("image")]),t._v(" "),a("td",[t._v("Image column (displays the actual image)")])]),t._v(" "),a("tr",[a("td",[t._v("date")]),t._v(" "),a("td",[t._v('Date field ("DD-MM-YYYY")')])]),t._v(" "),a("tr",[a("td",[t._v("datetime")]),t._v(" "),a("td",[t._v("Date time field (exact format will depend on your browser)")])]),t._v(" "),a("tr",[a("td",[t._v("checkbox")]),t._v(" "),a("td",[t._v("Checkox")])]),t._v(" "),a("tr",[a("td",[t._v("relation")]),t._v(" "),a("td",[t._v("relation to another model "),a("Badge",{attrs:{text:"beta"}})],1)]),t._v(" "),a("tr",[a("td",[t._v("object")]),t._v(" "),a("td",[t._v("objecrt or array")])]),t._v(" "),a("tr",[a("td",[t._v("list-of-value")]),t._v(" "),a("td",[t._v("The value is used to find the value in a vuex store")])]),t._v(" "),a("tr",[a("td",[t._v("list-of-data")]),t._v(" "),a("td",[t._v("The value is used to find the value in a vuex store")])]),t._v(" "),a("tr",[a("td",[t._v("nestedColumn")]),t._v(" "),a("td",[t._v("This types means that there are more columns nested in the object")])])])]),t._v(" "),a("h2",{attrs:{id:"styling-classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#styling-classes"}},[t._v("#")]),t._v(" Styling classes :")]),t._v(" "),a("p",[a("code",[t._v("aw-table-card")]),t._v(" "),a("code",[t._v("aw-table-card-head")]),t._v(" "),a("code",[t._v("aw-table-card-body")])]),t._v(" "),a("h2",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" events")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dataChanged")]),t._v(" "),a("td",[t._v("after the request to get list of items for the table is sent to the api")])]),t._v(" "),a("tr",[a("td",[t._v("crud-list-updated")]),t._v(" "),a("td",[t._v("after the request to get list of items for the table is sent to the api")])]),t._v(" "),a("tr",[a("td",[t._v("afterRefresh")]),t._v(" "),a("td",[t._v("after the local refresh of the table (no api)")])])])]),t._v(" "),a("h2",{attrs:{id:"awesome-bus-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awesome-bus-events"}},[t._v("#")]),t._v(" Awesome bus events")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("before-api-refresh")]),t._v(" "),a("td",[t._v("Before the request to get list of items for the table is sent to the api")])]),t._v(" "),a("tr",[a("td",[t._v("table-refreshed")]),t._v(" "),a("td",[t._v("after the request to get list of items for the table is sent to the api")])])])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);