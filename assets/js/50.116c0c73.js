(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{605:function(e,t,n){"use strict";n.r(t);var o=n(42),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"setting-configuration-globally"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setting-configuration-globally"}},[e._v("#")]),e._v(" Setting configuration globally")]),e._v(" "),n("h2",{attrs:{id:"context"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[e._v("#")]),e._v(" context")]),e._v(" "),n("p",[e._v("Often you'll need to set some config that you'd like to apply to all instances of a component of to all components. Exemple you'd like to set the primary Key field to be "),n("code",[e._v("_id")]),e._v(" (mon go like) instead of "),n("code",[e._v("id")]),e._v(". In order to do this you can set some parameters in the plugin initialization.")]),e._v(" "),n("h2",{attrs:{id:"setting-properties-on-a-component"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setting-properties-on-a-component"}},[e._v("#")]),e._v(" setting properties on a component.")]),e._v(" "),n("p",[e._v("The way to achieve this is super simple. Vac provides a configuration section for that")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Vue.use(VueAwesomeComponents, {\n  config: {\n    modelsStorePath: 'models',\n    rolesStorePath: 'user.user.roles',\n    extendedRolesStorePath: 'user.extendedRoles',\n    primaryKey: 'id',\n    hideIdsInSelect: false,\n    displayLabelsCache: {},\n    relationsAreClickable: true\n  },\n  AwesomeCrud: {\n    props: {\n      primaryKey: { type: String, default: 'id' },\n      modelsStorePath: {\n        type: String,\n        default: 'models'\n      },\n      options: { detailPageMode: 'sidebar' }\n    }\n  },\n  AwesomeTable: {\n    props: {\n      primaryKey: {\n        type: String,\n        default: 'id',\n      },\n      modelsStorePath: {\n        type: String,\n        default: 'models'\n      }\n    }\n  },\n  AwesomeList: {\n    props: {\n      primaryKey: {\n        type: String,\n        default: 'id',\n      },\n      modelsStorePath: {\n        type: String,\n        default: 'models'\n      }\n    }\n  },\n  AwesomeForm: {\n    props: {\n      primaryKey: {\n        type: String,\n        default: 'id'\n      },\n      modelsStorePath: {\n        type: String,\n        default: 'models'\n      }\n    },\n\n  },\n});\n\n")])])]),n("h2",{attrs:{id:"props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[e._v("#")]),e._v(" props")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Props")]),e._v(" "),n("th",[e._v("description")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("hideIdsInSelect")]),e._v(" "),n("td",[e._v("Basic string stype")])]),e._v(" "),n("tr",[n("td",[e._v("primaryKey")]),e._v(" "),n("td",[e._v("Number based field")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);