(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{615:function(e,t,o){"use strict";o.r(t);var a=o(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"next-steps"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next steps")]),e._v(" "),o("h2",{attrs:{id:"ui"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ui"}},[e._v("#")]),e._v(" UI")]),e._v(" "),o("ul",[o("li",[e._v("Support for an edit page in full (currently only slider and modal are supported)")])]),e._v(" "),o("h2",{attrs:{id:"critical"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#critical"}},[e._v("#")]),e._v(" critical")]),e._v(" "),o("ul",[o("li",[e._v("Remove dependency on bootstrap modals as it creates a dependency on jquery.\n-- we extract the code for modal feature from bootstrap,\n-- or we find another package that offers modals in vue\n-- or we implement our own modal code (preferred, but comes with a lot of potential bugs to deal with -- i'm thinking responsive...)")])]),e._v(" "),o("h2",{attrs:{id:"features"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Custom Filters on top of the awesome crud.")])]),e._v(" "),o("li",[o("p",[e._v("Support for custom format of api response")])]),e._v(" "),o("li",[o("p",[e._v("implement nested schemas for crud "),o("Badge",{attrs:{text:"DONE"}})],1)]),e._v(" "),o("li",[o("p",[e._v("forward parameters to a awesome crud in order to force the value of some fields\n(Ex: when i create a product form a page when coming with a fixed providerCode i want to the providerCode to be auto set the value in the query.)")])]),e._v(" "),o("li",[o("p",[e._v("Make sure that if a crud page does not have an edit/create/view action, also it does not have the route for doing so\nEx: if on product i set edit:false then the route /product/:id/edit should not exist")])]),e._v(" "),o("li",[o("p",[e._v("Bring back client side form validation for AwesomeCrud")])]),e._v(" "),o("li",[o("p",[e._v("remove dependency from bootstrap for AwesomeCrud "),o("Badge",{attrs:{text:"HARD",color:"danger"}})],1)]),e._v(" "),o("li",[o("p",[e._v("remove dependency from some useless components (Ex: Card)")])]),e._v(" "),o("li",[o("p",[e._v("Create list component for listing items (like in search results)")])]),e._v(" "),o("li",[o("p",[e._v("Inline actions buttons should appear also when you are viewing / editing a form")])]),e._v(" "),o("li",[o("p",[e._v("Add Hability to select many items and execute custom actions on them.")])])]),e._v(" "),o("h2",{attrs:{id:"datasource"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#datasource"}},[e._v("#")]),e._v(" DataSource")]),e._v(" "),o("ul",[o("li",[e._v("Make awesome crud work without a schema (eg. just with an url)")]),e._v(" "),o("li",[e._v("Support for websockets")]),e._v(" "),o("li",[e._v("Support for firebase")]),e._v(" "),o("li",[e._v("Support for vuex stores")])])])}),[],!1,null,null,null);t.default=r.exports}}]);